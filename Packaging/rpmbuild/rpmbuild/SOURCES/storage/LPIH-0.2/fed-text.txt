   ======================================
      LINUX POST-INSTALL HELPER: FEDORA
   ======================================

This is a simple program geared towards helping new Fedora and Debian Linux GNOME users set up their systems following a fresh install. Eventually it will act as a singular, cohesive source of information that provides an auto-generated custom bash script unique to each user's unique use-case. It's currently not very impressive and in development, but it has the basic functionality of providing the user with the auto-generation of a series of Linux commands that will let them install specific packages for specific functionality if they are not sure where to start after installing their operating system.

___________________________________________________
HOW TO USE THIS PROGRAM

Read through the series of checkboxes that come up after choosing your distro in the main menu window. Check them off if the described functionality is something you think you need on your system. For example, for those wishing to set up a gaming computer that uses Steam, you may wish to check the "Steam" and "GPU drivers" checkboxes at a bare minimum.

As you check off these boxes, you will see some commands appear in the black window in green text. This text is meant to be copied and pasted into your terminal. You will need to agree to each package manager yes/no prompt as it executes.

Presently, you likely won't find this TIPS section overly helpful, as the focus so far has been on getting the core functionality of the application off the ground in a reasonably functional way.

___________________________________________________
INTRODUCTION TO FEDORA LINUX

Fedora Linux is a distribution backed by Red Hat, a subsidiary of IBM. It has been around since 2003 and is known for using the latest versions of software in its repositories. Fedora uses the dnf package manager, as opposed to the apt package manager in Debian. On Linux, most (if not all) of the software used is pulled from a repository specific to that Linux distro, rather than being downloaded through a web browser or as a standalone package like on Windows and macOS. Because of this, you will need to update your local repos on your computer before installing any software or updating. This ensures that you are pulling in the latest software available in your distro's repositories. On Fedora, use the command sudo dnf update to update your system's repos, so you can install the latest packages. You can also do it through the software center application. Update your Fedora system at least once a week, if not more frequently.

Fedora, like other Linux distributions, has a package manager, which handles the installation, updating, and removal of software packages on the computer. Fedora's package manager is called dnf. In order to use some dnf commands, the user must use the sudo command to elevate their privileges to those of a super-user, for example: sudo dnf install mesa-vulkan-drivers, where mesa-vulkan-drivers is the package you are trying to install.

There are some instructions for optional basic system configuration outlined here that you might find useful, as well as some introductions to things that are different from Windows and macOS in Linux that you will want to be aware of.

______________________________________________________________________
SOFTWARE MANAGEMENT IN LINUX VS OTHER OPERATING SYSTEMS

Linux operating systems manage their software differently than other OSs like Windows and macOS. Instead of using standalone executable files, installer-wizard prompts, bundled dependencies, and individual update mechanisms per application, Linux uses a "package manager" to access and manage software pulled from centralized repositories where software "packages" are stored and maintained. This includes the code for the GNU/Linux-based operating system itself as well as most of the applications used on it, depending on the distro and more so the user's individual choice.

Standalone packages can still be downloaded from the internet for Linux. They will often be packaged in .tar.gz compressed "tar balls" which need to be decompressed and either compiled or have an executable in them run.

However, Fedora has its own packaging type called RPM. You will see these as .rpm extension files, which are software packages you can double-click on to open with Fedora's software center GUI. Alternatively, you can open a terminal and run the following command for a .rpm file with the name rpm_file_name_here.rpm:

sudo dnf install rpm_file_name_here.rpm



______________________________________________________________________
SETTING A STATIC IP IN THE GNOME DESKTOP ENVIRONMENT THROUGH THE GUI 

Normally, your device's unique IP address is assigned dynamically, meaning it is not necessarily going to be the same every time it connects to your network. You can get a slightly more stable and performant connection by setting a static IP address, where your IP is the same every time it connects to the network. This will also aid in configuration of firewalls and servers since you can now specify your computer's connection by its exact IP address. Having a static IP can be useful for a multitude of reasons, one of them being the implementation of firewall rules. The instructions for switching to a static IP on Linux in the GNOME desktop environment are as follows:

1. Click in the top-right corner of the screen where the power icon is. Click the gear-shaped icon to access settings. You can also find the settings application icon by pressing the super key (Windows key or Command key on Mac) and either find it visually or search settings in the search bar that pops up with the GNOME Activities window. This Activities window can also be accessed by clicking Activities in the top left of the screen.

2. If you are using Wi-Fi, click on Wi-Fi at the top of the scrollable menu on the left of the settings window. If you are using Ethernet, click on Network.

3. Click on the gear icon for the network connection you are using. Take note of the IP you are currently assigned in the IPv4 Address section of this window, under the Details tab. When you assign a static IP to your connection, you will make one that looks very similar to this one, save for the digits after the last decimal. So, if your IPv4 is currently 192.168.1.19 then you can likely assign yourself anything from 192.168.1.0 to 192.168.1.255, as long as the address is not in use by another network device.

4. Click the IPv4 tab, and change the method from Automatic (DHCP) to Manual.

5. In the address field, enter the static IP address you want to use.

6. Under Netmask, enter the subnet mask for your network. You can enter the ip addr show command to check which netmask to use. If you are using Wi-Fi, you will be looking for an interface that looks something like wlp32s0. Ethernet will look something like enp18s0. Beside the inet line for your interface in the terminal command output, there will be a slash followed by a number: this is the number of bits in your subnet mask.

Thus, inet 192.168.1.123/24 indicates a 24-bit netmask, which means 255.255.255.0 is your subnet mask.

- If it reads /16 then you will enter 255.255.0.0.
- For /8: 255.0.0.0
- For /24 (most common for residential networks): 255.255.255.0
- For /25: 255.255.255.128
- For /30: 255.255.255.252

A subnet mask determines the size of a network: if more bits are available, then more devices can be connected.

7. Now we must determine the Gateway address, which is the address of your router. If you have accessed your router's admin tools from your browser before by typing in an IP address, this would be the same address; and if this is your home network, it will generally be a similar IP sequence to what you have been dealing with, but with 1 as the only digit after the last decimal, like: XXX.XXX.X.1. So, if we are to keep with our 192.168.1.123 example, our gateway is most likely 192.168.1.1. However, we want to be sure of this. To confirm your gateway, use the ip route show command in the terminal. Look for the default via line with an IP beside it. This is your gateway address to enter. If you have difficulty determining your gateway, use the command:

ip route show | grep default

The output should contain the gateway address for your network after the words "default via."

8. Time to choose your DNS servers. You can pick whichever one you like. Cloudflare is popular with many, since it offers security features like DDoS protection, SSL encryption, and a web application firewall. You can specify 2 addresses, in case one is down (separate them with a comma in the text field). To use Cloudflare as your DNS provider, you can use the addresses 1.1.1.1, 1.0.0.1. For added malware protection, substitute the last 1 in each address with a 2. OpenDNS is another popular provider that offers its own security features and malware protection, much like Cloudflare. To use OpenDNS, use 208.67.222.222, 208.67.220.220.

9. Save your new static IP address configuration with the Apply button. Go to your network settings and switch the connection off, then on again. Try to connect to a webpage. If it works, you are good to go. If not, you may have made an error in your IP configuration. If you need to go back to an automatically assigned IP, you can undo the static IP settings by simply switching your connection from Manual to Automatic (DHCP) again in the settings.

